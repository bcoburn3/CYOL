(defpackage :CYOL)

(in-package :CYOL)

(eval-when (:compile-toplevel :execute)
  (ql:quickload :cl-ppcre))

(eval-when (:execute)
  (print (tokenize (file-to-string "c:\\ben\\code\\CYOL\\test.txt")))
  (let ((tree (run-parser (tokenize (file-to-string  "c:\\ben\\code\\CYOL\\test.txt")))))
    (print tree)
    (print (mapcar #'reverse-tree tree))))

(defun reverse-tree (tree)
  ;recursively reverses every list in a tree except the final leaf nodes
  (if (listp tree)
      (loop for sub in tree
	 with res = '()
	 do (if (listp sub)
		(if (listp (car sub))
		    (push (reverse-tree sub) res)
		    (push sub res))
		(push sub res))
     finally (return res))))

(((((NUMBER "2") ((((STRING "done!") (IDENTIFIER "print") NIL-RECIEVER CALL) ((((IDENTIFIER "pass") BLOCK) ((KEYWORD "false") (KEYWORD "if"))) (((STRING "...") (IDENTIFIER "print") NIL-RECIEVER CALL) (BLOCK)) ((NUMBER "2") (KEYWORD "if")))) (BLOCK)) ((NUMBER "1") (KEYWORD "if"))) ((STRING "Delicious!") (IDENTIFIER "print") BLOCK) ((CONSTANT "True") (IDENTIFIER "tasty") (OPERATOR "==") (KEYWORD "if"))))) 

(((((KEYWORD "if") 
    (OPERATOR "==") 
    (IDENTIFIER "tasty") 
    (CONSTANT "True")) 
   ((IDENTIFIER "print") 
    (STRING "Delicious!")) 
   (((KEYWORD "if")
     (NUMBER "1")) 
    ((BLOCK) 
     ((((KEYWORD "if") (NUMBER "2")) 
       ((BLOCK) 
	((IDENTIFIER "print") (STRING "..."))) 
       (((KEYWORD "if") (KEYWORD "false")) ((IDENTIFIER "pass"))))
      ((IDENTIFIER "print") 
       (STRING "done!")))) 
    (NUMBER "2")))))

(((((KEYWORD "if") 
    (OPERATOR "==") 
    (IDENTIFIER "tasty") 
    (CONSTANT "True")) 
   ((IDENTIFIER "print") 
    (STRING "Delicious!")) 
   (((KEYWORD "if") 
     (NUMBER "1")) 
    ((BLOCK) 
     ((((KEYWORD "if") 
	(NUMBER "2")) 
       ((BLOCK) 
	((IDENTIFIER "print") 
	 (STRING "..."))) 
       (((KEYWORD "if") 
	 (KEYWORD "false")) 
	((IDENTIFIER "pass")))) 
      ((IDENTIFIER "print") 
       (STRING "done!")))) 
    (NUMBER "2")))))

(((((KEYWORD "if") 
    (OPERATOR "==") 
    (IDENTIFIER "tasty") 
    (CONSTANT "True")) 
   (BLOCK 
     (IDENTIFIER "print") 
     (STRING "Delicious!")) 
   (((KEYWORD "if") 
     (NUMBER "1")) 
    ((BLOCK) 
     ((((KEYWORD "if") 
	(NUMBER "2")) 
       ((BLOCK) 
	(CALL NIL-RECIEVER 
	      (IDENTIFIER "print") 
	      (STRING "..."))) 
       (((KEYWORD "if") 
	 (KEYWORD "false")) 
	(BLOCK 
	    (IDENTIFIER "pass")))) 
      (CALL NIL-RECIEVER 
	    (IDENTIFIER "print") 
	    (STRING "done!")))) 
    (NUMBER "2")))))

((((KEYWORD "if") 
   (NUMBER "1")) 
  ((BLOCK) 
   (((KEYWORD "if") 
     (NUMBER "2")) 
    ((BLOCK) 
     (CALL NIL-RECIEVER 
	   (IDENTIFIER "print") 
	   (STRING "..."))) 
    ((((KEYWORD "if") 
       (KEYWORD "false")) 
      (BLOCK 
	  (IDENTIFIER "pass"))) 
     (CALL NIL-RECIEVER 
	   (IDENTIFIER "print") 
	   (STRING "done!"))))) 
  ((NUMBER "2"))) 
 (((KEYWORD "if") 
   (OPERATOR "==") 
   (IDENTIFIER "tasty") 
   (CONSTANT "True")) 
  (BLOCK 
    (IDENTIFIER "print") 
    (STRING "Delicious!"))))

((((KEYWORD "if") 
   (OPERATOR "==") 
   (IDENTIFIER "tasty") 
   (CONSTANT "True")) 
  (BLOCK 
   (IDENTIFIER "print") 
   (STRING "Delicious!"))) 
 (((KEYWORD "if") 
   (NUMBER "1"))) 
 ((BLOCK) 
  (((KEYWORD "if") 
    (NUMBER "2")) 
   ((BLOCK) 
    (CALL NIL-RECIEVER 
     (IDENTIFIER "print") 
     (STRING "..."))) 
   ((((KEYWORD "if") 
      (KEYWORD "false")) 
     (BLOCK 
      (IDENTIFIER "pass"))) 
    (CALL NIL-RECIEVER 
	  (IDENTIFIER "print") 
	  (STRING "done!")))) 
  ((NUMBER "2"))))
